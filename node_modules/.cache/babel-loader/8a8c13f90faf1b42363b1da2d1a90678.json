{"ast":null,"code":"var _jsxFileName = \"/Users/catherineburns/Documents/React_Apps/shoppies/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport MovieList from './components/MovieList';\nimport MovieListTitle from './components/MovieListTitle';\nimport SearchFeature from './components/SearchFeature';\nimport NominateMovie from './components/Nominate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [searchName, setSearchInput] = useState('');\n  const [nominated, setNominated] = useState([]).from(Array(5).keys());\n\n  const getMovieInput = async searchName => {\n    const url = `http://www.omdbapi.com/?s=${searchName}&apikey=f1ce2576`;\n    const response = await fetch(url);\n    const responseJson = await response.json();\n\n    if (responseJson.Search) {\n      setMovies(responseJson.Search);\n    }\n  };\n\n  useEffect(() => {\n    getMovieInput(searchName);\n  }, [searchName]);\n\n  const addNominatedMovie = movie => {\n    const newNominatedList = [...nominated, movie];\n    setNominated(newNominatedList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid movie-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col mt-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(MovieListTitle, {\n        heading: \"Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchFeature, {\n        searchName: searchName,\n        setSearchInput: setSearchInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(MovieList, {\n        movies: movies,\n        handleNominateClick: addNominatedMovie,\n        nominatedMovie: NominateMovie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col mt-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(MovieListTitle, {\n        heading: \"Nominated Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n        movies: nominated,\n        handleNominateClick: addNominatedMovie,\n        nominatedMovie: NominateMovie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"aVhLV224ZSaZjRKZ+TrGRGLT/xg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/catherineburns/Documents/React_Apps/shoppies/src/App.js"],"names":["React","useEffect","useState","MovieList","MovieListTitle","SearchFeature","NominateMovie","App","movies","setMovies","searchName","setSearchInput","nominated","setNominated","from","Array","keys","getMovieInput","url","response","fetch","responseJson","json","Search","addNominatedMovie","movie","newNominatedList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,sCAAP;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,UAAD,EAAaC,cAAb,IAA+BT,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAAR,CAAaY,IAAb,CAAkBC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,EAAlB,CAAlC;;AAEA,QAAMC,aAAa,GAAG,MAAOP,UAAP,IAAsB;AAC1C,UAAMQ,GAAG,GAAI,6BAA4BR,UAAW,kBAApD;AAEA,UAAMS,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;;AAEA,QAAGD,YAAY,CAACE,MAAhB,EAAwB;AACtBd,MAAAA,SAAS,CAACY,YAAY,CAACE,MAAd,CAAT;AACD;AACF,GATD;;AAWAtB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,aAAa,CAACP,UAAD,CAAb;AACD,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,QAAMc,iBAAiB,GAAIC,KAAD,IAAW;AACnC,UAAMC,gBAAgB,GAAG,CAAC,GAAGd,SAAJ,EAAea,KAAf,CAAzB;AACAZ,IAAAA,YAAY,CAACa,gBAAD,CAAZ;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAG,2BAAjB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAG,eAAjB;AAAA,8BACE,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAe,QAAA,UAAU,EAAIhB,UAA7B;AAAyC,QAAA,cAAc,EAAEC;AAAzD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAG,KAAjB;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,MAAM,EAAIH,MADZ;AAEE,QAAA,mBAAmB,EAAEgB,iBAFvB;AAGE,QAAA,cAAc,EAAIlB;AAHpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eAYE;AAAK,MAAA,SAAS,EAAG,eAAjB;AAAA,8BACE,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AACE,QAAA,MAAM,EAAIM,SADZ;AAEE,QAAA,mBAAmB,EAAEY,iBAFvB;AAGE,QAAA,cAAc,EAAIlB;AAHpB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAjDD;;GAAMC,G;;KAAAA,G;AAmDN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport MovieList from './components/MovieList';\nimport MovieListTitle from './components/MovieListTitle';\nimport SearchFeature from './components/SearchFeature';\nimport NominateMovie from './components/Nominate';\n\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchName, setSearchInput] = useState('');\n  const [nominated, setNominated] = useState([]).from(Array(5).keys());\n\n  const getMovieInput = async (searchName) => {\n    const url = `http://www.omdbapi.com/?s=${searchName}&apikey=f1ce2576`\n    \n    const response = await fetch(url);\n    const responseJson = await response.json();\n  \n    if(responseJson.Search) {\n      setMovies(responseJson.Search)\n    }   \n  };\n\n  useEffect(() => {\n    getMovieInput(searchName);\n  }, [searchName]);\n\n  const addNominatedMovie = (movie) => {\n    const newNominatedList = [...nominated, movie]\n    setNominated(newNominatedList);\n  }\n\n  return (\n    <div className = 'container-fluid movie-app'>\n      <div className = 'col mt-4 mb-4'>\n        <MovieListTitle heading='Movies'/>\n        <SearchFeature searchName = {searchName} setSearchInput={setSearchInput}/>\n      </div>\n      <div className = \"row\">\n        <MovieList \n          movies = {movies} \n          handleNominateClick={addNominatedMovie} \n          nominatedMovie = {NominateMovie}\n        />\n      </div>\n      <div className = 'col mt-4 mb-4'>\n        <MovieListTitle heading='Nominated Movies'/>\n        <MovieList \n          movies = {nominated} \n          handleNominateClick={addNominatedMovie} \n          nominatedMovie = {NominateMovie}\n        />\n      </div>\n    </div>\n  );\n\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}